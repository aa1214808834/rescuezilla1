# On push [1]
# [1] https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on: [push]
jobs:
  rescuezilla-iso-build:
    # The build bot OS environment does not really matter, as the docker image
    # provides the primary host environment for the build. However, a more recent
    # OS provides a more recent Docker release, which means additional Docker
    # functionality.
    # Launches Docker container to act as 'host system'. See BUILD.ISO.IMAGE.md for more information.
    runs-on: ubuntu-latest-arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true
          fetch-depth: 0

      # Extract human-readable version string from the most recent CHANGELOG entry
      - run: echo "RESCUEZILLA_RELEASE_NAME=\"$(git grep -h -E -o '[a-zA-Z].*)' CHANGELOG | head -1)\"" >> $GITHUB_ENV
      # Get deb package version using same command from its build scripts
      - run: echo "DEB_VERSION=$(git describe --tags  --match='[0-9].[0-9]*' --abbrev=0)" >> $GITHUB_ENV

      - name: Build deps
        run: |
            sudo apt update
            sudo apt install -f -y git-lfs git make sudo rsync debootstrap gettext squashfs-tools dosfstools mtools xorriso  memtest86+ devscripts debhelper checkinstall cmake time parallel  grub-efi-amd64-bin grub-efi-ia32-bin grub-pc-bin  shim-signed grub-efi-amd64-signed      libtool-bin gawk pkg-config comerr-dev docbook-xsl e2fslibs-dev fuse3  libaal-dev libblkid-dev libbsd-dev libncurses5-dev    libncursesw5-dev libntfs-3g89 libreadline-dev libreadline8 readline-common  libreiser4-dev libtinfo-dev libxslt1.1 nilfs-tools ntfs-3g ntfs-3g-dev   quilt sgml-base uuid-dev vmfs-tools xfslibs-dev xfsprogs xml-core  xsltproc ccache libssl-dev  build-essential crossbuild-essential-arm64
            git lfs clone https://github.com/rescuezilla/rescuezilla
            cd rescuezilla/
            git submodule init
            # Download 'partclone' and 'util-linux' submodules
            git submodule update --recursive
            # Optional: Build only the standalone deb packages without bothering with the live environment
            make deb
            mkdir /mnt/ramdisk/
            sudo mount -t tmpfs -o rw,size=7G tmpfs /mnt/ramdisk/
            rsync -av `pwd` /mnt/ramdisk
            cd /mnt/ramdisk/rescuezilla
            sudo make jammy


      - name: Create checksums for ISO images
        run: cd completed-artifacts && sudo ../src/scripts/create-iso-checksums.sh rescuezilla_${{env.DEB_VERSION}}-1_all.deb  rescuezilla-${{github.ref_name}}-*.iso

      - name: Upload release assets (on tag push)
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        with:
          files: |
            completed-artifacts/*SUM
            completed-artifacts/rescuezilla_${{env.DEB_VERSION}}-1_all.deb
            completed-artifacts/rescuezilla-${{github.ref_name}}-*.iso

      # Upload GitHub Action workflow *artifacts*. Note "artifacts" are a different concept to GitHub release rssets. The former is available on each GitHub Actions
      # workflow run. The latter is associated with only a pushed tag.

      - uses: actions/upload-artifact@v3
        with:
          name: SHA256SUM
          path: completed-artifacts/SHA256SUM

      - uses: actions/upload-artifact@v3
        with:
          name: MD5SUM
          path: completed-artifacts/MD5SUM

      - uses: actions/upload-artifact@v3
        with:
          name: SHA1SUM
          path: completed-artifacts/SHA1SUM

      - uses: actions/upload-artifact@v3
        with:
          name: rescuezilla_${{env.DEB_VERSION}}-1_all.deb
          path: completed-artifacts/rescuezilla_${{env.DEB_VERSION}}-1_all.deb

      - uses: actions/upload-artifact@v3
        with:
          name: rescuezilla-${{github.ref_name}}-64bit.oracular.iso
          path: completed-artifacts/rescuezilla-${{github.ref_name}}-64bit.oracular.iso

      - uses: actions/upload-artifact@v3
        with:
          name: rescuezilla-${{github.ref_name}}-64bit.noble.iso
          path: completed-artifacts/rescuezilla-${{github.ref_name}}-64bit.noble.iso

      - uses: actions/upload-artifact@v3
        with:
          name: rescuezilla-${{github.ref_name}}-64bit.jammy.iso
          path: completed-artifacts/rescuezilla-${{github.ref_name}}-64bit.jammy.iso

      - uses: actions/upload-artifact@v3
        with:
          name: rescuezilla-${{github.ref_name}}-64bit.focal.iso
          path: completed-artifacts/rescuezilla-${{github.ref_name}}-64bit.focal.iso

      - uses: actions/upload-artifact@v3
        with:
          name: rescuezilla-${{github.ref_name}}-32bit.bionic.iso
          path: completed-artifacts/rescuezilla-${{github.ref_name}}-32bit.bionic.iso

