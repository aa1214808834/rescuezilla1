name: Build ARM64 RescueZilla ISO

on: [push]

jobs:
  build-arm64-iso:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu_release: [jammy, noble]  # 支持的Ubuntu版本
        arch: [arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true
          fetch-depth: 0

      - name: Setup cross-compilation environment
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            qemu-user-static binfmt-support \
            crossbuild-essential-arm64 \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

          sudo dpkg --add-architecture arm64
          sudo apt-get update
          sudo apt-get install -y \
            libssl-dev:arm64 \
            libncurses5-dev:arm64 \
            libfuse3-dev:arm64

      - name: Install build dependencies
        run: |
          sudo apt-get install -y \
            git-lfs make rsync debootstrap \
            squashfs-tools dosfstools xorriso \
            devscripts debhelper cmake \
            grub-efi-arm64-bin shim-signed \
            libaal-dev:arm64 libblkid-dev:arm64

      - name: Configure build environment
        run: |
          echo "ARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          echo "CROSS_COMPILE=aarch64-linux-gnu-" >> $GITHUB_ENV
          echo "DEB_BUILD_OPTIONS=nocheck" >> $GITHUB_ENV

      - name: Build DEB package
        run: make deb CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++

      - name: Prepare chroot environment
        run: |
          mkdir -p build/chroot
          sudo qemu-debootstrap --arch=${{ matrix.arch }} \
            --keyring=/usr/share/keyrings/ubuntu-archive-keyring.gpg \
            ${{ matrix.ubuntu_release }} build/chroot \
            http://ports.ubuntu.com/ubuntu-ports

      - name: Build ISO image
        run: |
          sudo make ${{ matrix.ubuntu_release }} \
            ARCH=${{ matrix.arch }} \
            DEBOOTSTRAP="qemu-debootstrap --arch=${{ matrix.arch }}" \
            KERNEL_ARCH=${{ matrix.arch }} \
            UEFI_ARCH=${{ matrix.arch }} \
            GRUB_TARGET=arm64-efi \
            ISO_FILENAME=rescuezilla.${{ matrix.arch }}.${{ matrix.ubuntu_release }}.iso

      - name: Prepare artifacts
        run: |
          mkdir -p completed-artifacts
          sudo mv build/rescuezilla.${{ matrix.arch }}.${{ matrix.ubuntu_release }}.iso \
            completed-artifacts/rescuezilla-${{ github.ref_name }}-${{ matrix.arch }}.${{ matrix.ubuntu_release }}.iso
          sudo make clean-all

      - name: Generate checksums
        run: |
          cd completed-artifacts
          sha256sum * > SHA256SUM
          md5sum * > MD5SUM

      - uses: actions/upload-artifact@v4
        name: Upload ISO artifacts
        with:
          name: arm64-isos
          path: |
            completed-artifacts/SHA256SUM
            completed-artifacts/MD5SUM
            completed-artifacts/*.iso

      - name: Create GitHub Release
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: completed-artifacts/*
